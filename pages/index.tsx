import type { NextPage } from 'next'
import Head from 'next/head'
import 'mapbox-gl/dist/mapbox-gl.css'
import mapboxgl from 'mapbox-gl'
import '@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css'
import { useEffect, useState, useRef } from 'react'
import Drawer from '../components/Drawer'
import { useFeatures } from '../hooks/Features'
import { useUser, useSessionContext } from '@supabase/auth-helpers-react'
import { Auth, ThemeSupa } from '@supabase/auth-ui-react'
import Map from '../components/Map'
import { useStore } from '../store'

const Home: NextPage = () => {
  const marker = useRef<mapboxgl.Marker>()
  const [location, setLocation] = useState<GeolocationCoordinates>()
  const [addBtn, setAddBtn] = useState(false)
  const [showAuth, setAuth] = useState(false)
  const user = useUser()
  const { data: geo_json, isLoading, isFetching } = useFeatures()
  const { supabaseClient } = useSessionContext()
  const isDrawerOpen = useStore((state) => state.isDrawerOpen)
  const setDrawerOpen = useStore((state) => state.setDrawerOpen)

  const getUserLocation = () => {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          console.log('POS', position)
          if (position) setLocation(position.coords)
        },
        (e) => {
          console.error('Error  retrieving location', e)
        },
        {
          enableHighAccuracy: true,
          timeout: 10000
        }
      )
    }

    return null
  }

  useEffect(() => {
    getUserLocation()
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [])

  const HandleStateReset = () => {
    setDrawerOpen(false)
    setAddBtn(false)
    marker.current?.remove()
  }

  return (
    <div>
      <Head>
        <title>Bodega Cats</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="mx-11 my-3 md:mt-8 h-screen relative">
        <h1 className=" text-3xl md:text-[50px] font-baloo text-primaryGold font-bold">
          {' '}
          Bodega Cats
        </h1>
        {isLoading ? (
          <div className="text-3xl text-white"> ... loading </div>
        ) : (
          <>
            <Map geo_json={geo_json} addBtn={addBtn} setAddBtn={setAddBtn} setAuth={setAuth} />
            {isDrawerOpen && <Drawer handleStateReset={HandleStateReset} />}
          </>
        )}

        {!user && showAuth && (
          <div className="absolute left-0 right-0 top-40 max-w-xs  bg-white rounded-md shadow-[0_6px_30px_-10px] mx-auto p-4">
            <button
              className="font-baloo font-medium w-full text-right"
              onClick={() => setAuth(false)}
            >
              {' '}
              close
            </button>
            <p className="font-baloo font-bold text-lg text-center">
              {' '}
              log in with Google to add a new cat{' '}
            </p>
            <Auth
              redirectTo="http://localhost:3000/"
              appearance={{ theme: ThemeSupa }}
              supabaseClient={supabaseClient}
              providers={['google']}
              socialLayout="horizontal"
              onlyThirdPartyProviders={true}
            />
          </div>
        )}
      </main>
      <footer></footer>
    </div>
  )
}

export default Home
